@model SurveyPortal.Models.Survey.Survey.Survey

@{
    ViewData["Title"] = "Edit Survey";
}

<h2>Edit Survey</h2>

<form asp-action="Update" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="SurveyID" />

    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Category" class="form-label"></label>
        <input asp-for="Category" class="form-control" />
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>

    <div class="form-check mb-3">
        <input asp-for="IsActive" class="form-check-input" />
        <label asp-for="IsActive" class="form-check-label"></label>
    </div>

    <div class="d-flex justify-content-between">
        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
        <button type="submit" class="btn btn-primary">Save Changes</button>

        <a href="#"
           class="btn btn-outline-danger"
           onclick="deleteSurvey(@Model.SurveyID)">Delete</a>
    </div>
</form>

@section Scripts {
    <script>
             function deleteSurvey(surveyId) {
                if (confirm('Are you sure you want to delete this survey?')) {
                    fetch(`/Home/Delete/${surveyId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                .then(response => {
                    if (response.ok) {
                        window.location.href = '/Home/Index';
                    } else {
                        alert('Something went wrong');
                    }
                })
                .catch(error => alert('An error occurred: ' + error));
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");
            const title = document.querySelector("#Title");
            const description = document.querySelector("#Description");

            form.addEventListener("submit", function (e) {
                let isValid = true;

                document.querySelectorAll(".text-danger").forEach(el => el.textContent = "");

                if (!title.value.trim()) {
                    document.querySelector("[data-valmsg-for='Title']").textContent = "Title is required.";
                    isValid = false;
                }

                if (!description.value.trim()) {
                    document.querySelector("[data-valmsg-for='Description']").textContent = "Description is required.";
                    isValid = false;
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>
}