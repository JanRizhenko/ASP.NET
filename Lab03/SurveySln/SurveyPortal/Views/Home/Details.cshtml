@model SurveyPortal.Models.Survey

@{
    var sessionKey = $"draft_{Model.SurveyID}";
    var draftAnswer = Context.Session.GetString(sessionKey) ?? "";
}

@section Scripts {
    <script>
        const textarea = document.getElementById("surveyAnswer");
        const surveyId = "@Model.SurveyID";
        let timeout;

        textarea.addEventListener("input", function () {
            clearTimeout(timeout);

            timeout = setTimeout(() => {
                fetch(`/Home/SaveDraftAnswer?surveyId=${surveyId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ answer: textarea.value })
                });
            }, 500); 
        });
    </script>
}

<div class="container mt-4">
    <h2>@Model.Title</h2>
    <p class="text-muted">@Model.Description</p>
    <p><strong>Created:</strong> @Model.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</p>
    <span class="badge bg-@(Model.IsActive ? "success" : "secondary")">
        @(Model.IsActive ? "Active" : "Over")
    </span>

    @if (Model.IsActive)
    {
        <form asp-action="SaveSurveyAnswer" method="post" class="mt-4">
            <input type="hidden" name="SurveyID" value="@Model.SurveyID" />

            <div class="mb-3">
                <label for="surveyAnswer" class="form-label">Your Answer:</label>
                <textarea id="surveyAnswer" name="Answer" class="form-control" rows="6" placeholder="Type your answer here..." required>@draftAnswer</textarea>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    }
    else
    {
        <p class="mt-3 text-muted">This survey is no longer accepting responses.</p>
    }

    @if (Model.SurveyAnswers.Any())
    {
        <hr />
        <h5 class="mt-4">Previous Answers:</h5>

        <div class="border rounded shadow-sm p-2" style="max-height: 300px; overflow-y: auto;">
            <ul class="list-group list-group-flush">
                @foreach (var answer in Model.SurveyAnswers.OrderByDescending(a => a.AnsweredAt))
                {
                    <li class="list-group-item">
                        <div class="small text-muted">@answer.AnsweredAt.ToString("yyyy-MM-dd HH:mm")</div>
                        <div>@answer.Answer</div>
                    </li>
                }
            </ul>
        </div>
    }

</div>
